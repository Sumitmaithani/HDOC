import img1 from "../../../assets/images/Home/face(1).png";
import img2 from "../../../assets/images/Home/face(2).png";
import img3 from "../../../assets/images/Home/face(3).png";
import img4 from "../../../assets/images/Home/face(4).png";
import img5 from "../../../assets/images/Home/face(5).png";
import img6 from "../../../assets/images/Home/face(6).png";
import img7 from "../../../assets/images/Home/face(7).png";
import img8 from "../../../assets/images/Home/face(8).png";
import img9 from "../../../assets/images/Home/face(9).png";
import img10 from "../../../assets/images/Home/face(10).png";

import animation1 from "../../../assets/animations/animation2.json";
import animation2 from "../../../assets/animations/animation1.json";
import animation3 from "../../../assets/animations/animation3.json";
import animation4 from "../../../assets/animations/animation (1).json";
import animation8 from "../../../assets/animations/animation (5).json";
import animation11 from "../../../assets/animations/animation (8).json";
import animation13 from "../../../assets/animations/animation (10).json";
import animation15 from "../../../assets/animations/animation (12).json";
import animation16 from "../../../assets/animations/animation (13).json";
import animation17 from "../../../assets/animations/animation (14).json";
import animation18 from "../../../assets/animations/animation (15).json";
import animation19 from "../../../assets/animations/animation (16).json";
import animation20 from "../../../assets/animations/animation (17).json";
import animation21 from "../../../assets/animations/animation (18).json";
import animation22 from "../../../assets/animations/animation (19).json";
import animation23 from "../../../assets/animations/animation (20).json";
import animation25 from "../../../assets/animations/animation (22).json";
import animation26 from "../../../assets/animations/animation (23).json";
import animation27 from "../../../assets/animations/animation (24).json";
import animation28 from "../../../assets/animations/animation (25).json";
import animation29 from "../../../assets/animations/animation (26).json";
import animation30 from "../../../assets/animations/animation (27).json";
import animation32 from "../../../assets/animations/animation (29).json";
import animation33 from "../../../assets/animations/animation (30).json";
import animation34 from "../../../assets/animations/animation (31).json";
import animation35 from "../../../assets/animations/animation (32).json";
import animation36 from "../../../assets/animations/animation (33).json";
import animation37 from "../../../assets/animations/animation (34).json";
import animation39 from "../../../assets/animations/animation (36).json";
import animation40 from "../../../assets/animations/animation (37).json";

import room1 from "../../../assets/images/Room/house.jpg";
import room2 from "../../../assets/images/Room/room(2).jpg";
import room3 from "../../../assets/images/Room/room(3).jpg";
import room4 from "../../../assets/images/Room/room(4).jpg";
import room5 from "../../../assets/images/Room/room(1).jpg";
import room6 from "../../../assets/images/Room/room(6).jpg";
import room7 from "../../../assets/images/Room/room(7).jpg";
import room8 from "../../../assets/images/Room/room(10).jpg";
import room9 from "../../../assets/images/Room/room(9).jpg";
import room10 from "../../../assets/images/Room/room(8).jpg";

export const data = [
  {
    id: 1,
    unit: "Unit 1",
    topic: "Arrays and Strings",
    backgroundColor: "#F9851C",
    animation1: animation1,
    animation2: animation2,
    animation3: animation3,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 1 : Basic Operations",
          name: "Basic Operations",
          unitImg: room1,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 2 : Sorting and Searching in Arrays",
          name: "Sorting and Searching in Arrays",
          unitImg: room1,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 3 : Character Arrays and Strings",
          name: "Character Arrays and Strings",
          unitImg: room1,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 4 : String Manipulation",
          name: "String Manipulation",
          unitImg: room1,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 5 : Two-Dimensional Arrays",
          name: "Two-Dimensional Arrays",
          unitImg: room1,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 6 : Array Rotation and Reversal",
          name: "Array Rotation and Reversal",
          unitImg: room1,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 7 : Prefix Sum Arrays",
          name: "Prefix Sum Arrays",
          unitImg: room1,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 8 : Sliding Window Technique",
          name: "Sliding Window Technique",
          unitImg: room1,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 9 : Two-Pointer Technique",
          name: "Two-Pointer Technique",
          unitImg: room1,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 10 : Dynamic Programming with Arrays",
          name: "Dynamic Programming with Arrays",
          unitImg: room1,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 2,
    unit: "Unit 2",
    topic: "Sorting Algorithms (Bubble Sort, Insertion Sort, Selection Sort)",
    backgroundColor: "#14AF6C",
    animation1: animation11,
    animation2: animation19,
    animation3: animation23,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 11 : Introduction to sorting algorithms",
          name: "Introduction to sorting algorithms",
          unitImg: room2,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 12 : Understanding the basics of comparison-based sorting algorithms.",
          name: "Understanding the basics of comparison-based sorting algorithms.",
          unitImg: room2,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 13 : Bubble Sort",
          name: "Bubble Sort",
          unitImg: room2,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 14 : Insertion Sort",
          name: "Insertion Sort",
          unitImg: room2,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 15 : Selection Sort",
          name: "Selection Sort",
          unitImg: room2,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 16 : Time complexity analysis of sorting algorithms and Big-O notation.",
          name: "Time complexity analysis of sorting algorithms and Big-O notation.",
          unitImg: room2,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 17 : Prefix Sum Arrays",
          name: "Prefix Sum Arrays",
          unitImg: room2,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 18 : Best-case, worst-case, and average-case analysis of sorting algorithms.",
          name: "Best-case, worst-case, and average-case analysis of sorting algorithms.",
          unitImg: room2,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 19 : Applications of sorting algorithms in real-world scenarios",
          name: "Applications of sorting algorithms in real-world scenarios",
          unitImg: room2,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 20 : Advanced sorting algorithms",
          name: "Advanced sorting algorithms.",
          unitImg: room2,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 3,
    unit: "Unit 3",
    topic: "Linked Lists (Singly Linked List, Doubly Linked List)",
    backgroundColor: "#1cb0f6",
    animation1: animation4,
    animation2: animation15,
    animation3: animation17,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 21 : Introduction to Linked Lists",
          name: "Introduction to Linked Lists",
          unitImg: room3,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 22 : Singly Linked Lists",
          name: "Singly Linked Lists",
          unitImg: room3,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 23 : Implementing a Singly Linked List",
          name: "Implementing a Singly Linked List",
          unitImg: room3,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 24 : Doubly Linked Lists",
          name: "Doubly Linked Lists",
          unitImg: room3,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 25 : Implementing a Doubly Linked List",
          name: "Implementing a Doubly Linked List",
          unitImg: room3,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 26 : Circular Linked Lists",
          name: "Circular Linked Lists",
          unitImg: room3,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 27 : Implementing a Circular Linked List",
          name: "Implementing a Circular Linked List",
          unitImg: room3,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 28 : Linked List Applications",
          name: "Linked List Applications",
          unitImg: room3,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 29 : Advantages and Disadvantages of Linked Lists",
          name: "Advantages and Disadvantages of Linked Lists",
          unitImg: room3,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 30 : Linked Lists in Real-World Applications",
          name: "Linked Lists in Real-World Applications",
          unitImg: room3,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 4,
    unit: "Unit 4",
    topic: "Stacks and Queues",
    backgroundColor: "#8549ba",
    animation1: animation16,
    animation2: animation25,
    animation3: animation18,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 31 : Introduction to Stacks and Queues",
          name: "Introduction to Stacks and Queues",
          unitImg: room4,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 32 : Implementing a Stack",
          name: "Implementing a Stack",
          unitImg: room4,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 33 : Stack Operations",
          name: "Stack Operations",
          unitImg: room4,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 34 : Stack Applications",
          name: "Stack Applications",
          unitImg: room4,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 35 : Implementing a Queue",
          name: "Implementing a Queue",
          unitImg: room4,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 36 : Queue Operations",
          name: "Queue Operations",
          unitImg: room4,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 37 : Queue Applications",
          name: "Queue Applications",
          unitImg: room4,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 38 : Double-Ended Queue (Deque)",
          name: "Double-Ended Queue (Deque)",
          unitImg: room4,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 39 : Implementing a Deque",
          name: "Implementing a Deque",
          unitImg: room4,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 40 : Advantages and Disadvantages of Stacks and Queues",
          name: "Advantages and Disadvantages of Stacks and Queues",
          unitImg: room4,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 5,
    unit: "Unit 5",
    topic: "Recursion and Backtracking",
    backgroundColor: "#ffc202",
    animation1: animation21,
    animation2: animation13,
    animation3: animation8,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 41 : Introduction to Recursion",
          name: "Introduction to Recursion",
          unitImg: room5,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 42 : Recursive Functions",
          name: "Recursive Functions",
          unitImg: room5,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 43 : Base Case and Recursive Case",
          name: "Base Case and Recursive Case",
          unitImg: room5,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 44 : Recursive Algorithms",
          name: "Recursive Algorithms",
          unitImg: room5,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 45 : Tail Recursion",
          name: "Tail Recursion",
          unitImg: room5,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 46 : Recursion vs Iteration",
          name: "Recursion vs Iteration",
          unitImg: room5,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 47 : Introduction to Backtracking",
          name: "Introduction to Backtracking",
          unitImg: room5,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 48 : Backtracking Algorithms",
          name: "Backtracking Algorithms",
          unitImg: room5,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 49 : Backtracking vs Brute Force",
          name: "Backtracking vs Brute Force",
          unitImg: room5,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 50 : Advantages and Disadvantages of Recursion and Backtracking",
          name: "Advantages and Disadvantages of Recursion and Backtracking",
          unitImg: room5,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 6,
    unit: "Unit 6",
    topic: "Trees (Binary Trees, Binary Search Trees)",
    backgroundColor: "#ED82DE",
    animation1: animation26,
    animation2: animation40,
    animation3: animation34,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 51 : Introduction to Trees",
          name: "Introduction to Trees",
          unitImg: room6,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 52 : Binary Trees",
          name: "Binary Trees",
          unitImg: room6,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 53 : Implementing Binary Trees",
          name: "Implementing Binary Trees",
          unitImg: room6,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 54 : Binary Tree Traversal",
          name: "Binary Tree Traversal",
          unitImg: room6,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 55 : Binary Search Trees",
          name: "Binary Search Trees",
          unitImg: room6,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 56 : Implementing Binary Search Trees",
          name: "Implementing Binary Search Trees",
          unitImg: room6,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 57 : Search, Insertion, and Deletion",
          name: "Search, Insertion, and Deletion",
          unitImg: room6,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 58 : Balanced Binary Search Trees",
          name: "Balanced Binary Search Trees",
          unitImg: room6,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 59 : B-Trees",
          name: "B-Trees",
          unitImg: room6,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 60 : Advantages and Disadvantages of Trees",
          name: "Advantages and Disadvantages of Trees",
          unitImg: room6,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 7,
    unit: "Unit 7",
    topic: "Graphs (BFS, DFS, Shortest Path Algorithms)",
    backgroundColor: "#B697FF",
    animation1: animation30,
    animation2: animation29,
    animation3: animation33,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 61 : Introduction to Graphs",
          name: "Introduction to Graphs",
          unitImg: room7,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 62 : Graph Representations",
          name: "Graph Representations",
          unitImg: room7,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 63 : Graph Traversal",
          name: "Graph Traversal",
          unitImg: room7,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 64 : Connected Components",
          name: "Connected Components",
          unitImg: room7,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 65 : Topological Sorting",
          name: "Topological Sorting",
          unitImg: room7,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 66 : Shortest Path Algorithms",
          name: "Shortest Path Algorithms",
          unitImg: room7,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 67 : All-Pairs Shortest Path",
          name: "All-Pairs Shortest Path",
          unitImg: room7,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 68 : Minimum Spanning Tree",
          name: "Minimum Spanning Tree",
          unitImg: room7,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 69 : Maximum Flow",
          name: "Maximum Flow",
          unitImg: room7,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 70 : Applications of Graph Algorithms",
          name: "Applications of Graph Algorithms",
          unitImg: room7,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 8,
    unit: "Unit 8",
    topic: "Dynamic Programming (Memoization and Tabulation)",
    backgroundColor: "#007cbd",
    animation1: animation22,
    animation2: animation36,
    animation3: animation20,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 71 : Introduction to Dynamic Programming",
          name: "Introduction to Dynamic Programming",
          unitImg: room8,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 72 : Recursion and Memoization",
          name: "Recursion and Memoization",
          unitImg: room8,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 73 : Tabulation",
          name: "Tabulation",
          unitImg: room8,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 74 : Overlapping Subproblems",
          name: "Overlapping Subproblems",
          unitImg: room8,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 75 : Optimal Substructure",
          name: "Optimal Substructure",
          unitImg: room8,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 76 : Fibonacci Series",
          name: "Fibonacci Series",
          unitImg: room8,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 77 : Longest Common Subsequence",
          name: "Longest Common Subsequence",
          unitImg: room8,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 78 : 0-1 Knapsack Problem",
          name: "0-1 Knapsack Problem",
          unitImg: room8,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 79 : Edit Distance",
          name: "Edit Distance",
          unitImg: room8,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 80 : Applications of Dynamic Programming",
          name: "Applications of Dynamic Programming",
          unitImg: room8,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 9,
    unit: "Unit 9",
    topic: "Hash Tables",
    backgroundColor: "#fbb13c",
    animation1: animation27,
    animation2: animation28,
    animation3: animation32,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 81 : Introduction to Hash Tables",
          name: "Introduction to Hash Tables",
          unitImg: room9,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 82 : Hash Functions",
          name: "Hash Functions",
          unitImg: room9,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 83 : Collision Resolution Techniques",
          name: "Collision Resolution Techniques",
          unitImg: room9,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 84 : Load Factor",
          name: "Load Factor",
          unitImg: room9,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 85 : Rehashing",
          name: "Rehashing",
          unitImg: room9,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 86 : Hash Table Implementation",
          name: "Hash Table Implementation",
          unitImg: room9,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 87 : Hash Set",
          name: "Hash Set",
          unitImg: room9,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 88 : Hash Map",
          name: "Hash Map",
          unitImg: room9,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 89 : Time and Space Complexity",
          name: "Time and Space Complexity",
          unitImg: room9,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 90 : Applications of Hash Tables",
          name: "Applications of Hash Tables",
          unitImg: room9,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  },
  {
    id: 10,
    unit: "Unit 10",
    topic:
      "Advanced Topics (Heap, AVL Tree, Red-Black Tree, Tries, Segment Tree)",
    backgroundColor: "#00954a",
    animation1: animation37,
    animation2: animation35,
    animation3: animation39,
    data: [
      {
        key: 1,
        image: img1,
        color: "#875DAF",
        left: 0,
        right: 0,
        room: {
          day: "Day 91 : Heap Data Structure",
          name: "Heap Data Structure",
          unitImg: room10,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 2,
        image: img2,
        color: "#875DAF",
        left: 0,
        right: 100,
        room: {
          day: "Day 92 : Priority Queue",
          name: "Priority Queue",
          unitImg: room10,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 3,
        image: img3,
        color: "#F98FDB",
        left: 0,
        right: 160,
        room: {
          day: "Day 93 : Binary Heap",
          name: "Binary Heap",
          unitImg: room10,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 4,
        image: img4,
        color: "#14AF6C",
        left: 0,
        right: 40,
        room: {
          day: "Day 94 : AVL Trees",
          name: "AVL Trees",
          unitImg: room10,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#1cb0f6",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 5,
        image: img5,
        color: "#E2DB06",
        left: 80,
        right: 0,
        room: {
          day: "Day 95 : Rotations in AVL Trees",
          name: "Rotations in AVL Trees",
          unitImg: room10,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, mastering the basic operations on data structures is crucial for becoming proficient in programming. These operations form the building blocks of more complex algorithms and data structures, and a solid understanding of them is essential for solving real-world problems efficiently.",
            "Although the basic operations are simple in nature, they can be applied in numerous ways to solve complex problems. It is important to choose the right data structure and the appropriate basic operation for a particular problem. Moreover, it is also necessary to consider the time and space complexities of these operations and data structures.",
            "By implementing these basic operations in various data structures, one can develop a better understanding of how they work and how they can be used to solve problems. Practicing coding exercises and participating in coding challenges can help you improve your problem-solving skills using these basic operations.",
            "Finally, it is important to remember that the field of computer science is constantly evolving, and new data structures and algorithms are being developed every day. Keeping up with the latest trends and advancements in the field can help you stay ahead and continually improve your skills.",
            "In summary, the basic operations of insertion, deletion, traversal, and search are essential to understanding and implementing data structures and algorithms. By mastering these basic operations, you can begin to solve more complex problems and build more advanced programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#E2DB06",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      },
      {
        key: 6,
        image: img6,
        color: "#F98FDB",
        left: 150,
        right: 0,
        room: {
          day: "Day 96 : Red-Black Trees",
          name: "Red-Black Trees",
          unitImg: room10,
          theory: [
            "Sorting and searching are two fundamental operations in computer science and play a crucial role in many real-world applications. Sorting involves arranging a collection of items in a particular order, while searching involves finding the position of an item in a collection. Arrays are one of the most commonly used data structures for implementing sorting and searching algorithms, and hence understanding the different techniques for sorting and searching arrays is essential for any programmer.",

            "This article provides an overview of some of the commonly used sorting and searching algorithms for arrays.",

            "/hSorting Algorithms:",
            "Sorting algorithms are classified into two categories: comparison-based and non-comparison-based. Comparison-based algorithms compare the elements of the array and rearrange them based on some specific order. Non-comparison-based algorithms do not compare elements, instead, they make use of some intrinsic properties of the data to sort the array. Some of the commonly used sorting algorithms for arrays are:",

            "Bubble Sort: Bubble sort is a simple comparison-based algorithm that works by repeatedly swapping adjacent elements if they are in the wrong order. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Insertion Sort: Insertion sort is another simple comparison-based algorithm that works by sorting the elements one at a time. It has a time complexity of O(n^2), but it is efficient for small datasets or when the array is nearly sorted.",

            "Selection Sort: Selection sort is another simple comparison-based algorithm that works by selecting the smallest element from the unsorted part of the array and swapping it with the element at the beginning of the unsorted part. It has a time complexity of O(n^2) and is not suitable for large datasets.",

            "Merge Sort: Merge sort is a divide-and-conquer algorithm that works by dividing the array into two halves, sorting each half, and merging the two sorted halves into a single sorted array. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "Quick Sort: Quick sort is another divide-and-conquer algorithm that works by selecting a pivot element, partitioning the array around the pivot element, and recursively sorting the two partitions. It has a time complexity of O(nlogn) in the average case but can have a worst-case time complexity of O(n^2).",

            "Heap Sort: Heap sort is a comparison-based algorithm that works by building a max heap from the array, repeatedly extracting the maximum element from the heap and placing it at the end of the array, and then rebuilding the heap. It has a time complexity of O(nlogn) and is efficient for large datasets.",

            "/hSearching Algorithms:",
            "Searching algorithms are classified into two categories: sequential and binary. Sequential search involves searching the array element by element, while binary search involves dividing the array in half and searching in the half where the element may be located. Binary search is generally more efficient than sequential search, but it requires that the array be sorted. Some of the commonly used searching algorithms for arrays are:",

            "Linear Search: Linear search is a sequential search algorithm that works by iterating over the elements of the array until the desired element is found. It has a time complexity of O(n) and is efficient for small datasets.",
            "Binary Search: Binary search is a search algorithm that works by repeatedly dividing the array in half and searching in the half where the element may be located. It has a time complexity of O(logn) and is efficient for large datasets.",
            "In conclusion, understanding the different techniques for sorting and searching arrays is crucial for any programmer. The choice of sorting or searching algorithm depends on the specific problem and the size of the dataset. By selecting the appropriate algorithm, programmers can ensure that their programs run efficiently and deliver accurate results."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F9851C",
              question:
                " Q 1 - If the number of records to be sorted is small, then …… sorting can be efficient.",
              optionA: "Merge",
              optionB: "Heap",
              optionC: "Selection",
              optionD: "Bubble",
              answer: "c"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - The complexity of the sorting algorithm measures the …… as a function of the number n of items to be sorter.",
              optionA: "average time",
              optionB: "running time",
              optionC: "average-case complexity",
              optionD: "case-complexity",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of the following is not a limitation of binary search algorithm?",
              optionA: "must use a sorted array",
              optionB:
                "requirement of sorted array is expensive when a lot of insertion and deletions are needed",
              optionC:
                "Quhere must be a mechanism to access middle element directlyue",
              optionD:
                "binary search algorithm is not efficient when the data elements more than 1500.",
              answer: "d"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - The Average case occurs in the linear search algorithm ……….",
              optionA: "when the item is somewhere in the middle of the array",
              optionB: "when the item is not the array at all",
              optionC: "when the item is the last element in the array",
              optionD:
                "Item is the last element in the array or item is not there at all",
              answer: "a"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question:
                " Q 5 - Binary search algorithm cannot be applied to _________",
              optionA: " sorted linked list",
              optionB: "sorted binary trees",
              optionC: "sorted linear array",
              optionD: "pointer array",
              answer: "a"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Complexity of linear search algorithm is _________",
              optionA: " O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "a"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - Sorting algorithm can be characterized as _________",
              optionA:
                "Simple algorithm which require the order of n2 comparisons to sort n items.",
              optionB:
                "Sophisticated algorithms that require the O(nlog2n) comparisons to sort items.",
              optionC: "Both of the above",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - The complexity of bubble sort algorithm is _______",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "c"
            },
            {
              no: 9,
              color: "#007cbd",
              question:
                " Q 9 - The complexity of merge sort algorithm is ________",
              optionA: "O(n)",
              optionB: "O(logn)",
              optionC: "O(n2)",
              optionD: "O(n logn)",
              answer: "d"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - ________ is putting an element in the appropriate place in a sorted list yields a larger sorted order list.",
              optionA: "Insertion",
              optionB: "Extraction",
              optionC: "Selection",
              optionD: "Distribution",
              answer: "a"
            }
          ]
        }
      },
      {
        key: 7,
        image: img7,
        color: "#875DAF",
        left: 30,
        right: 0,
        room: {
          day: "Day 97 : Insertion and Deletion in Red-Black Trees",
          name: "Insertion and Deletion in Red-Black Trees",
          unitImg: room10,
          theory: [
            "Character arrays and strings are an essential part of computer programming. They are used to store and manipulate a sequence of characters or a string of text. In this article, we will explore the basics of character arrays and strings, including how they are stored in memory, how to initialize and manipulate them, and some common operations that can be performed on them.",
            "/hCharacter Arrays:",
            "A character array is a collection of contiguous memory locations, each of which can store a single character. The elements of a character array can be accessed using their index. For example, the first element of a character array is at index 0, the second element is at index 1, and so on. The size of a character array is determined by the number of elements it contains.",
            "/hDeclaring and Initializing Character Arrays:",
            "A character array can be declared and initialized in several ways. One way is to declare it as a string literal:",
            "char str[] = 'Hello World';",
            'This will create a character array called str with 12 elements (including the null terminator) and initialize it with the string "Hello World".',
            "/hAnother way to initialize a character array is to use an initializer list:",
            "char vowels[] = {'a', 'e', 'i', 'o', 'u'};",
            "This will create a character array called vowels with 5 elements and initialize it with the characters 'a', 'e', 'i', 'o', and 'u'.",
            "/hAccessing and Modifying Character Arrays:",
            " To access a specific element of a character array, we can use the index operator:",
            "char str[] = 'Hello World'; ",
            " char first = str[0]; // first = 'H'",
            " char last = str[10]; // last = 'd'",
            "To modify a specific element of a character array, we can simply assign a new value to it:",
            "char str[] = 'Hello World'",
            "str[6] = 'W'; // str is now 'Hello World'",
            "/hString Functions:",
            "In C, strings are represented as character arrays terminated with a null character '\0'. There are several standard library functions that can be used to manipulate strings.",
            "The strlen() function returns the length of a string:",
            "char str[] = 'Hello World';",
            "int len = strlen(str); // len = 11",
            "The strcpy() function copies one string to another:",
            "char src[] = 'Hello World' ",
            "char dest[20];",
            "strcpy(dest, src); // dest is now 'Hello World'",
            "The strcat() function concatenates two strings:",
            "char str1[] = 'Hello '",
            "char str2[] = 'World'",
            "char result[20];",
            "strcpy(result, str1);",
            'strcat(result, str2); // result is now "Hello World"',
            "The strcmp() function compares two strings:",
            "/hConclusion:",
            "In conclusion, character arrays and strings are essential concepts in computer programming. They are used to store and manipulate sequences of characters or strings of text. Understanding the basics of character arrays and strings,"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 8,
        image: img8,
        color: "#F98FDB",
        left: 0,
        right: 60,
        room: {
          day: "Day 98 : Trie Data Structure",
          name: "Trie Data Structure",
          unitImg: room10,
          theory: [
            "String manipulation is a fundamental concept in computer programming, where the manipulation of strings involves the use of various operations to modify, extract, or process a string of characters. Strings are a sequence of characters that represent text or data and are widely used in programming languages for various purposes such as data processing, data storage, and data retrieval.",
            "String manipulation operations are used to modify or manipulate strings in various ways, such as concatenation, substring extraction, searching, sorting, and formatting. In this article, we will discuss various string manipulation operations, their functionalities, and examples of their use.",
            "/hConcatenation:",
            'Concatenation is the process of joining two or more strings to form a single string. This is done using the "+" operator or the string concatenation method. For example:',
            'string1 = "Hello"',
            'string2 = "World"',
            'concatenated_string = string1 + " " + string2',
            "print(concatenated_string) # Output: Hello World",
            "/hSubstring Extraction:",
            "Substring extraction is the process of extracting a part of a string. This can be done using string slicing or the substring method. For example:",
            'string = "Hello World"',
            "substring = string[0:5]",
            "print(substring) # Output: Hello",
            "/hSearching:",
            'Searching is the process of finding the occurrence of a substring within a string. This can be done using the "in" operator or the find method. For example:',
            'string = "Hello World"',
            'if "World" in string:',
            '    print("Substring found!")',
            "else:;",
            '    print("Substring not found!");',

            'index = string.find("World");',
            "if index != -1",
            '    print("Substring found at index:", index); ""',
            "else:;",
            '   print("Substring not found!")',
            "/hSorting:",
            "Sorting is the process of arranging the characters in a string in ascending or descending order. This can be done using the sorted method or the sort method. For example:",
            'string = "cba"',
            "sorted_string = sorted(string)",
            "print(sorted_string) # Output: ['a', 'b', 'c']",
            'string_list = ["cba", "abc", "bca"]',
            "string_list.sort()",
            'print(string_list) # Output: ["abc", "bca", "cba"]',
            "/hFormatting:",
            "Formatting is the process of modifying the appearance of a string. This can be done using various methods such as the format method or the f-string method. For example:",
            'name = "John"',
            "age = 25",
            'formatted_string = "My name is {} and I am {} years old".format(name, age)',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            'name = "John"',
            "age = 25",
            'formatted_string = f"My name is {name} and I am {age} years old"',
            "print(formatted_string) # Output: My name is John and I am 25 years old",
            "In conclusion, string manipulation is an essential concept in computer programming, and understanding the various string manipulation operations is crucial for solving real-world problems efficiently. String manipulation is used in a wide variety of applications, such as text processing, data storage, and data retrieval, and it is essential for developers to have a strong grasp of these concepts to create effective and efficient programs."
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#F98FDB",
              question: " Q 1 - String in Java is a _________?",
              optionA: "class",
              optionB: "object",
              optionC: "reference",
              optionD: "reference",
              answer: "a"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following class is the superclass of String and StringBuffer class?",
              optionA: "java.util",
              optionB: "java.lang",
              optionC: "ArrayList",
              optionD: "java.string",
              answer: "b"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which of these operators can be used to concatenate two or more String objects?",
              optionA: "+",
              optionB: "+=",
              optionC: "&",
              optionD: "||",
              answer: "a"
            },
            {
              no: 4,
              color: "#ED82DE",
              question:
                " Q 4 - Which of these constructors is used to create an empty String object?",
              optionA: "String(void)",
              optionB: "String(0)",
              optionC: "String()",
              optionD: "None of the mentioned",
              answer: "c"
            },
            {
              no: 5,
              color: "#007cbd",
              question:
                " Q 5 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 6,
              color: "#B697FF",
              question: " Q 6 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 7,
              color: "#F9851C",
              question:
                " Q 7 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 8,
              color: "#14AF6C",
              question: " Q 8 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 9,
              color: "#1cb0f6",
              question: " Q 9 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 10,
              color: "#8549ba",
              question:
                " Q 10 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 11,
              color: "#ffc202",
              question: " Q 11 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 12,
              color: "#ED82DE",
              question: " Q 12 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            },
            {
              no: 13,
              color: "#ffc202",
              question:
                " Q 13 - Which of this method of class String is used to obtain a length of String object?",
              optionA: "get()",
              optionB: "Sizeof()",
              optionC: "lengthof()",
              optionD: "length()",
              answer: "d"
            },
            {
              no: 14,
              color: "#F9851C",
              question:
                ' Q 14 -  What will s2 contain after following lines of Java code?  String s1 = "one"; String s2 = s1.concat("two")',
              optionA: "one",
              optionB: "two",
              optionC: "onetwo",
              optionD: "twoone",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 9,
        image: img9,
        color: "#14AF6C",
        left: 0,
        right: 160,
        room: {
          day: "Day 9 : Segment Trees",
          name: "Segment Trees",
          unitImg: room10,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#007cbd",
              question:
                " Q 1 - Which function will you choose to join two words?",
              optionA: "strcpy()",
              optionB: "strcat()",
              optionC: "strncon()",
              optionD: "memcon()",
              answer: "b"
            },
            {
              no: 2,
              color: "#B697FF",
              question: " Q 2 - Which among the following is Copying function?",
              optionA: "memcpy()",
              optionB: "strcopy()",
              optionC: "memcopy()",
              optionD: "strxcpy()",
              answer: "a"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - The _______ function appends not more than n characters.",
              optionA: "strcat()",
              optionB: "strcon()",
              optionC: "strncat()",
              optionD: "memcat()",
              answer: "c"
            },
            {
              no: 4,
              color: "#14AF6C",
              question: " Q 4 - What will strcmp() function do?",
              optionA: "compares the first n characters of the object",
              optionB: "undefined function",
              optionC: "copies the string",
              optionD: "compares the string",
              answer: "d"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - What is a String in C Language?",
              optionA: "String is a new Data Type in C",
              optionB:
                "String is an array of Characters with null character as the last element of array",
              optionC:
                "String is an array of Characters with null character as the first element of array",
              optionD:
                "String is an array of Integers with 0 as the last element of array",
              answer: "b"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - What is the Format specifier used to print a String or Character array in C Printf or Scanf function?",
              optionA: "%c",
              optionB: "%C",
              optionC: "%s",
              optionD: "%w",
              answer: "c"
            },
            {
              no: 7,
              color: "#ffc202",
              question: " Q 7 - What is the prototype of strcoll() function?",
              optionA: "int strcoll(const char *s1,const char *s2)",
              optionB: "int strcoll(const char *s1)",
              optionC: "int strcoll(const *s1,const *s2)",
              optionD: "int strcoll(const *s1,const *s2)",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question: " Q 8 - What is the function of strcoll()?",
              optionA:
                "copies the string, result is dependent on the LC_COLLATE",
              optionB:
                "compares the string, result is not dependent on the LC_COLLATE",
              optionC:
                "compares the string, result is dependent on the LC_COLLATE",
              optionD:
                "copies the string, result is not dependent on the LC_COLLATE",
              answer: "c"
            }
          ]
        }
      },
      {
        key: 10,
        image: img10,
        color: "#FD3225",
        left: 0,
        right: 50,
        room: {
          day: "Day 100 : B-Trees",
          name: "B-Trees",
          unitImg: room10,
          theory: [
            "Basic Operations in Arrays and Strings include some of the fundamental tasks that you can perform on these data structures. These operations include Insertion, Deletion, Traversal, and Search. In this discussion, we will explore each of these operations in detail and also highlight some of the best practices and techniques for performing them.",
            "/hInsertion:",
            "Insertion is the process of adding an element to an array or string. It is one of the most basic operations that you can perform on these data structures. There are different ways to insert an element in an array. One way is to insert an element at a specific index in the array, which involves moving all the elements that come after it one position to the right. Another way is to insert an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can insert a character at any position in the string by creating a new string with the character added in the right position.",
            "/hDeletion:",
            "Deletion is the process of removing an element from an array or string. Similar to insertion, there are different ways to delete an element in an array. One way is to delete an element at a specific index in the array, which involves moving all the elements that come after it one position to the left. Another way is to delete an element at the end of the array, which is usually faster as it does not require any element shifting. In strings, you can delete a character at any position in the string by creating a new string with the character removed.",
            "/hTraversal:",
            "Traversal refers to the process of visiting each element in an array or string. Traversal is important as it allows you to process each element of the array or string in some way. There are different ways to traverse an array. One way is to use a loop to iterate over all the elements of the array, from the first to the last element. Another way is to use a while loop to iterate over the elements of the array until a certain condition is met. For strings, you can use a loop to traverse each character of the string.",
            "/hSearch:",
            "Searching is the process of finding a specific element in an array or string. Searching is one of the most important operations that you can perform on these data structures. There are different algorithms that you can use to search for an element in an array, such as linear search and binary search. In strings, you can search for a character or substring by iterating over the characters of the string and comparing them with the search query.",
            "/hBest Practices and Techniques:",
            "When performing basic operations on arrays and strings, it is important to use efficient algorithms and techniques. For example, when inserting an element in an array, it is generally faster to insert at the end of the array instead of inserting at a specific index, which requires shifting all the elements after the insertion point. Similarly, when deleting an element from an array, it is generally faster to delete from the end of the array instead of deleting at a specific index, which requires shifting all the elements after the deletion point.",
            "In addition, there are some useful techniques that you can use to improve the performance of array and string operations. For example, you can use pointers to access elements of an array or string, which is faster than using array indexing. You can also use a temporary buffer to store the results of some array or string operations, which can save time and space. Finally, you can use a hashing function to perform fast searches in strings.",
            "/hConclusion:",
            "In conclusion, Basic Operations (Insertion, Deletion, Traversal, Search) are fundamental operations that you can perform on arrays and strings. These operations are important for many programming tasks and can be used to solve a wide variety of problems. By using efficient algorithms and techniques, you can improve the performance of these"
          ],
          question: [
            {
              no: 1,
              question: "Find pair with given sum in the array",
              link: "https://www.techiedelight.com/find-pair-with-given-sum-array/"
            },
            {
              no: 2,
              question: "Check if subarray with 0 sum is exists or not",
              link: "https://www.techiedelight.com/check-subarray-with-0-sum-exists-not/"
            },
            {
              no: 3,
              question: "Print all sub-arrays with 0 sum",
              link: "https://www.techiedelight.com/find-sub-array-with-0-sum/"
            },
            {
              no: 4,
              question: "Sort binary array in linear time",
              link: "https://www.techiedelight.com/sort-binary-array-linear-time/"
            },
            {
              no: 5,
              question: "Find a duplicate element in a limited range array",
              link: "https://www.techiedelight.com/find-duplicate-element-limited-range-array/"
            },
            {
              no: 6,
              question:
                "Find the largest subarray having an equal number of 0’s and 1’s",
              link: "https://www.techiedelight.com/find-maximum-length-sub-array-equal-number-0s-1s/"
            },
            {
              no: 7,
              question: " Find the maximum product of two integers in an array",
              link: "https://www.techiedelight.com/find-maximum-product-two-integers-array/"
            },
            {
              no: 8,
              question:
                " Sort an array of 0’s, 1’s, and 2’s (Dutch National Flag Problem)",
              link: "https://www.techiedelight.com/sort-array-containing-0s-1s-2s-dutch-national-flag-problem/"
            },
            {
              no: 9,
              question: " In-place merge two sorted arrays",
              link: "https://www.techiedelight.com/inplace-merge-two-sorted-arrays/"
            },
            {
              no: 10,
              question: "Merge two arrays by satisfying given constraints",
              link: "https://www.techiedelight.com/merge-two-arrays-satisfying-given-constraints/"
            },
            {
              no: 11,
              question:
                " Find index of 0 to be replaced to get the maximum length sequence of continuous ones",
              link: "https://www.techiedelight.com/find-index-0-replaced-get-maximum-length-sequence-of-continuous-ones/"
            },
            {
              no: 12,
              question:
                " Shuffle an array using Fisher–Yates shuffle algorithm",
              link: "https://www.techiedelight.com/shuffle-given-array-elements-fisher-yates-shuffle/"
            },
            {
              no: 13,
              question:
                " Rearrange an array with alternate high and low elements",
              link: "https://www.techiedelight.com/rearrange-the-array-with-alternate-high-and-low-elements/"
            },
            {
              no: 14,
              question: " Find equilibrium index of an array",
              link: "https://www.techiedelight.com/find-equilibrium-index-array/"
            },
            {
              no: 15,
              question:
                "Find the largest subarray formed by consecutive integers",
              link: "https://www.techiedelight.com/find-largest-sub-array-formed-by-consecutive-integers/"
            }
          ],
          quiz: [
            {
              no: 1,
              color: "#14AF6C",
              question:
                " Q 1 - Which of the following is a non-linear data structure?",
              optionA: "Array",
              optionB: "Linked List",
              optionC: "Queue",
              optionD: "Tree",
              answer: "d"
            },
            {
              no: 2,
              color: "#B697FF",
              question:
                " Q 2 - Which of the following data structures is linear?",
              optionA: "Graph",
              optionB: "AVL Tree",
              optionC: "Red-Black Tree",
              optionD: "Stack",
              answer: "c"
            },
            {
              no: 3,
              color: "#F9851C",
              question:
                " Q 3 - Which data structure is used for implementing recursion?",
              optionA: "Array",
              optionB: "Stack",
              optionC: "Queue",
              optionD: "Linked List",
              answer: "b"
            },
            {
              no: 4,
              color: "#14AF6C",
              question:
                " Q 4 - Which of the following data structures are indexed structures?",
              optionA: "Queue",
              optionB: "Trees",
              optionC: "Linear Arrays",
              optionD: "None of the above",
              answer: "c"
            },
            {
              no: 5,
              color: "#1cb0f6",
              question: " Q 5 - Stack data structure cannot be used for",
              optionA: "Expression Evaluation in Postfix Form",
              optionB: "String Reversal",
              optionC: "Recursion Implementation",
              optionD: "Resource Allocation and Scheduling",
              answer: "d"
            },
            {
              no: 6,
              color: "#8549ba",
              question:
                " Q 6 - Which of the following data structures is preferred in the implementation of a database system?",
              optionA: "B-Tree",
              optionB: "Binary Search Tree",
              optionC: "AVL Tree",
              optionD: "B+- Tree",
              answer: "d"
            },
            {
              no: 7,
              color: "#ffc202",
              question:
                " Q 7 - How can memory be saved when storing colour information in a Red-Black tree?",
              optionA:
                "Using the least significant bit of one of the node's pointers to store colour information",
              optionB: "another array with the colours of each node",
              optionC: "Keeping colour data in the node structure",
              optionD: "employing both negative and positive numbering",
              answer: "a"
            },
            {
              no: 8,
              color: "#ED82DE",
              question:
                " Q 8 - Which of the following data structures is best for searching words in dictionaries?",
              optionA: "Binary Search Tree",
              optionB: "Graph",
              optionC: "N-ary tree",
              optionD: "Trie",
              answer: "d"
            },
            {
              no: 9,
              color: "#007cbd",
              question: " Q 9 - Which of the following statement is true:",
              optionA:
                "The less frequently the split occurs, if the order of B-tree is large",
              optionB:
                "The split occurs more frequently, if the order of B-tree is large",
              optionC:
                "The more frequently the split occurs, if the order of B-tree is small",
              optionD:
                "The less frequently the split occurs, if the order of B-tree is small",
              answer: "a"
            },
            {
              no: 10,
              color: "#fbb13c",
              question:
                " Q 10 - What is the worst-case time complexity of inserting n elements into an empty linked list that must be kept in sorted order?",
              optionA: "O(n)",
              optionB: "O(log(n))",
              optionC: "O(nlog(n))",
              optionD: "O(n^2)",
              answer: "d"
            },
            {
              no: 11,
              color: "#B697FF",
              question:
                " Q 11 - Which of the following data structure can’t store the non-homogeneous data elements?",
              optionA: "Arrays",
              optionB: "Records",
              optionC: "Pointers",
              optionD: "Stacks",
              answer: "a"
            },
            {
              no: 12,
              color: "#F9851C",
              question:
                " Q 12 - A directed graph is _______ if there is a path from each vertex to every other vertex in the graph.",
              optionA: "Weakly connected",
              optionB: "Strongly connected",
              optionC: "Tightly connected",
              optionD: "Linearly connected",
              answer: "b"
            }
          ]
        }
      }
    ]
  }
];
